#  Remote Weather Access - Client/server solution for distributed weather networks
#   Copyright (C) 2013-2023 Ralf Rettig (info@personalfme.de)
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Affero General Public License as
#   published by the Free Software Foundation, either version 3 of the
#   License, or (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with this program.  If not, see <https://www.gnu.org/licenses/>.

# This configuration is primarily for easy testing and documents how this app can be deployed.
# Start it with: `docker-compose --profile frontend --profile backend up`
version: '3'

services:
  reverse-proxy:
    image: nginx:1.21.0
    ports:
      - "80:80"
    volumes:
      - ./deployment/demo_deployment/nginx:/etc/nginx/conf.d
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - frontend
    profiles:
      - frontend

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    expose:
      - 8050
    environment:
      - ENV_PATH=/app/frontend/environments/.frontend.docker-compose.env
      - PORT=8050
    depends_on:
      - backend
      - database
      - migrations
    profiles:
      - frontend

  migrations:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    entrypoint: /app/frontend/environments/perform_migrations.sh
    environment:
      - ENV_PATH=/app/frontend/environments/.frontend.docker-compose.env
    depends_on:
      - database
      - object-storage
    profiles:
      - frontend

  object-storage:
    image: minio/minio:RELEASE.2022-08-13T21-54-44Z
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./storage/minio:/data
    environment:
      MINIO_ROOT_USER: minio_access_key
      MINIO_ROOT_PASSWORD: minio_secret_key
    command: server /data --console-address ":9001"
    profiles:
      - frontend

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DOCKER_COMPOSE_APP=true
      - PORT=8000
      - JWT_SECRET_KEY=SECRET-KEY
      - DB_URL=database
      - DB_PORT=5432
      - DB_USER_DB_USER=userdb
      - DB_USER_DB_PASSWORD=passwd1
      - DB_WEATHER_DB_USER=weatherdatadb
      - DB_WEATHER_DB_PASSWORD=passwd2
      - DB_USER_DATABASE=users
      - DB_WEATHER_DATABASE=weatherdata
      - GUNICORN_WORKERS=2
      - GUNICORN_ACCESSLOG=-
    depends_on:
      - database
    profiles:
      - backend

  database:
    build:
      context: deployment/demo_deployment/postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=passwd
    profiles:
      - frontend
      - backend
